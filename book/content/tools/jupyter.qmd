# Jupyter notebooks

```{r}
#| include: false
source(here::here("resources/scripts/content/source-all.R"))
```

## Overview

### Introduction

Jupyter is an independent project that provides

- **Jupyter Notebooks**: interactive code cells, markdown text, tables, plots, latex math formulas
- **Jupyter Lab**: web-based interactive development environment (editor)
- **Jupyter Hub**: multi-user version of notebooks

Jupyter notebook is new version of interactive python notebook that have extension `.ipynb`, which is still used.

### Objectives

In this book intent is to provide notes and references to get started with jupyter notebooks using jupyter lab. Note that jupyter notebooks can be used independent from jupyter lab. There are other editors which support using jupyter notebooks, e.g. VSCode, RStudio etc.

### Resources

[Jupyter project's website](https://jupyter.org/) has extensive documentations for further learning.

## Installation

Jupyter notebook can be installed independently but it is recommended to install jupyter lab which contains notebook and related dependencies. [Link to help page](https://jupyter.org/install).

```bash
<python installation path> -m pip install jupyterlab
```

Refer to pip usage section (@sec-pip-usage).

## Features

- Run code interactively
- Mix rich text, code and results using markdown and code cells
- Export results in different formats like html, pdf, word etc.

## Use cases

- **Interactive programming** for quick trials or learning with annotation

- **Reproducible Research**: quick and easy sharing of ideas/analysis with code and results

## Keyboard Shortcuts

::::: {.columns}
::: {.column width=50%}
- add cell
  - below: `b`
  - above: `a`

- change cell type
  - markdown: `m`
  - code: `y`

:::
::: {.column width=50%}

- cut cell: `x`

- copy cell: `c`

- paste cell below: `p`

- enter/exit cell edit mode: `enter/esc`
:::
:::::

- run cell: `Ctrl + Enter`

- run cell and move to cell below: `Shift + Enter`

## Markdown

Markdown is a markup language which provides simple syntax for text to be converted to different formats. It is used extensively by many tools which try to automate documentation, e.g. quarto, pandoc, github, jupyter notebooks and many more. Each have their own subtle variations, but are very similar as the root is markdown.

Markdown syntax is easy and quick to learn.

### Syntax cheat sheet

```{r}
#| echo: false
#| output: asis
#| cache: false

table_file_path <- "resources/tables/pybcb-tables.xlsx"
sheet <- "md-part-1" # name or number
package <- "pander"

tbl_df <- readxl::read_excel(here::here(table_file_path), sheet=sheet)
tbl_df <- tbl_df[-3]

tbl_out <- create_table(tbl_df, package = package, set_hux_md = TRUE)
    # huxtable::set_width(1) |>
    # huxtable::theme_grey()

print_tbl_out(tbl_out, package)
```
